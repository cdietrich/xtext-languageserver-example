buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:1.0.5'
		classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
	}
}

plugins {
	id "com.moowork.node" version "0.13"
}

node {
	version = '6.2.2'
	npmVersion = '3.10.6'
	download = true
}

// Configuration for Xtext projects
configure(subprojects.findAll { it.name.startsWith('org.xtext') }) {

	ext.xtextVersion = '2.11.0-SNAPSHOT'
	repositories {
		jcenter()
		mavenLocal()
		maven { url 'http://services.typefox.io/open-source/jenkins/job/lsapi/lastStableBuild/artifact/build/maven-repository/' }
		maven { url 'http://services.typefox.io/open-source/jenkins/job/xtext-lib/job/master/lastStableBuild/artifact/build/maven-repository/' }
		maven { url 'http://services.typefox.io/open-source/jenkins/job/xtext-core/job/master/lastStableBuild/artifact/build/maven-repository/' }
		maven { url 'http://services.typefox.io/open-source/jenkins/job/xtext-extras/job/master/lastStableBuild/artifact/build/maven-repository/' }
		maven { url 'http://services.typefox.io/open-source/jenkins/job/xtext-xtend/job/master/lastStableBuild/artifact/build/maven-repository/' }
		maven {
			url 'https://oss.sonatype.org/content/repositories/snapshots'
		}
	}
	
	apply plugin: 'java'
	apply plugin: 'org.xtext.xtend'
	apply from: "${rootDir}/gradle/source-layout.gradle"
	apply from: "${rootDir}/gradle/maven-deployment.gradle"
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	
	group = 'org.xtext.example.mydsl'
	version = '1.0.0-SNAPSHOT'
	
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
	
	configurations.all {
		exclude group: 'asm'
	}

}

task npmInstallVsce(type: NpmTask) {
	group 'Node'
	description 'Installs the NodeJS package "Visual Studio Code Extension Manager"'
	args = [ 'install', 'vsce' ]
}

// Configuration for vscode projects
configure(subprojects.findAll { it.name.startsWith('vscode') }) {

	apply plugin: 'com.moowork.node'

	node {
		nodeModulesDir = rootProject.projectDir
	}

	npmInstall.dependsOn ':org.xtext.example.mydsl.ide:shadowJars'

	task vscodeExtension(dependsOn: [npmInstall, npmInstallVsce], type: NodeTask) {
		ext.destDir = new File(buildDir, 'vscode')
		ext.archiveName = "$project.name-${project.version}.vsix"
		ext.destPath = "$destDir/$archiveName"
		outputs.dir destDir
		doFirst {
			destDir.mkdirs()
		}
		script = file("$rootProject.projectDir/node_modules/vsce/out/vsce")
		args = [ 'package', '--out', destPath ]
		execOverrides {
			workingDir = projectDir
		}
	}

	task clean << {
		delete vscodeExtension.destDir
	}

}